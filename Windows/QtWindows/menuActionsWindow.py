# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'menuActionsWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

import WorkWithDB


class Ui_menuActionsWindow(object):
    def setupUi(self, menuActionsWindow):
        menuActionsWindow.setObjectName("menuActionsWindow")
        menuActionsWindow.setWindowModality(QtCore.Qt.NonModal)
        menuActionsWindow.resize(800, 600)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        menuActionsWindow.setFont(font)
        menuActionsWindow.setStyleSheet("background-color: rgb(212, 237, 255);")
        self.centralwidget = QtWidgets.QWidget(menuActionsWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 0, 800, 100))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(26)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label.setAutoFillBackground(False)
        self.label.setStyleSheet("background-color: rgb(180, 197, 255);")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setWordWrap(False)
        self.label.setObjectName("label")
        self.backButton = QtWidgets.QPushButton(self.centralwidget)
        self.backButton.setGeometry(QtCore.QRect(20, 30, 131, 51))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.backButton.setFont(font)
        self.backButton.setStyleSheet("background-color: rgb(200, 220, 210);")
        self.backButton.setDefault(False)
        self.backButton.setFlat(False)
        self.backButton.setObjectName("backButton")
        self.uploadFileButton = QtWidgets.QPushButton(self.centralwidget)
        self.uploadFileButton.setGeometry(QtCore.QRect(460, 250, 271, 50))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.uploadFileButton.setFont(font)
        self.uploadFileButton.setStyleSheet("background-color: rgb(180, 197, 255);")
        self.uploadFileButton.setDefault(False)
        self.uploadFileButton.setFlat(False)
        self.uploadFileButton.setObjectName("uploadFileButton")
        self.loadFileButton = QtWidgets.QPushButton(self.centralwidget)
        self.loadFileButton.setGeometry(QtCore.QRect(460, 170, 271, 50))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.loadFileButton.setFont(font)
        self.loadFileButton.setStyleSheet("background-color: rgb(180, 197, 255);")
        self.loadFileButton.setDefault(False)
        self.loadFileButton.setFlat(False)
        self.loadFileButton.setObjectName("loadFileButton")
        self.designFileButton = QtWidgets.QPushButton(self.centralwidget)
        self.designFileButton.setGeometry(QtCore.QRect(150, 410, 501, 50))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.designFileButton.setFont(font)
        self.designFileButton.setStyleSheet("background-color: rgb(180, 197, 255);")
        self.designFileButton.setDefault(False)
        self.designFileButton.setFlat(False)
        self.designFileButton.setObjectName("designFileButton")
        self.createFileButton = QtWidgets.QPushButton(self.centralwidget)
        self.createFileButton.setGeometry(QtCore.QRect(460, 330, 271, 50))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.createFileButton.setFont(font)
        self.createFileButton.setStyleSheet("background-color: rgb(180, 197, 255);")
        self.createFileButton.setDefault(False)
        self.createFileButton.setFlat(False)
        self.createFileButton.setObjectName("createFileButton")
        self.createFileStyleButton = QtWidgets.QPushButton(self.centralwidget)
        self.createFileStyleButton.setGeometry(QtCore.QRect(69, 330, 271, 50))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.createFileStyleButton.setFont(font)
        self.createFileStyleButton.setStyleSheet("background-color: rgb(180, 197, 255);")
        self.createFileStyleButton.setDefault(False)
        self.createFileStyleButton.setFlat(False)
        self.createFileStyleButton.setObjectName("createFileStyleButton")
        menuActionsWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(menuActionsWindow)

        self.backButton.clicked.connect(showBackWindow)
        self.loadFileButton.clicked.connect(loadFileWindow)
        self.uploadFileButton.clicked.connect(uploadFileWindow)
        self.createFileButton.clicked.connect(createFileWindow)
        self.designFileButton.clicked.connect(designFile)
        self.createFileStyleButton.clicked.connect(createFileStyle)

        QtCore.QMetaObject.connectSlotsByName(menuActionsWindow)

    def retranslateUi(self, menuActionsWindow):
        _translate = QtCore.QCoreApplication.translate
        menuActionsWindow.setWindowTitle(_translate("menuActionsWindow", "Experiment"))
        self.label.setText(_translate("menuActionsWindow", "Меню"))
        self.backButton.setText(_translate("menuActionsWindow", "Назад"))
        self.uploadFileButton.setText(_translate("menuActionsWindow", "Выгрузить файл"))
        self.loadFileButton.setText(_translate("menuActionsWindow", "Загрузить файл"))
        self.designFileButton.setText(_translate("menuActionsWindow", "Проверить оформление файла"))
        self.createFileButton.setText(_translate("menuActionsWindow", "Создать файл"))
        self.createFileStyleButton.setText(_translate("menuActionsWindow", "Создать стиль"))


def showBackWindow():
    from Windows.QtWindows.mainWindow import showMainWindow
    showMainWindow()
    closeMenuActionsWindow()


def loadFileWindow():
    from InputTest import tryToLoadFile
    tryToLoadFile()


def uploadFileWindow():
    userDoc = WorkWithDB.findUserDocument(valueUser[0])
    availableDoc = WorkWithDB.findAvailableDocument(valueUser[0])
    from Windows.QtWindows.tableDocumentsWindow import editNameUser, editDocuments, showTableDocumentsWindow
    editNameUser("Здравствуйте, " + ''.join(valueUser[1]))
    editDocuments(userDoc, availableDoc)
    showTableDocumentsWindow()
    closeMenuActionsWindow()


def createFileWindow():
    from InputTest import haveExperimentByUserTest
    haveExperimentByUserTest(valueUser[0], valueUser[1])


def designFile():
    from Windows.QtWindows.inputParamFileFormatting import editIdUser, showInputParamFileFormattingWindow
    editIdUser(valueUser[0])
    showInputParamFileFormattingWindow()
    closeMenuActionsWindow()


def createFileStyle():
    from Converter import convertStringToFile, convertFile, deleteFile
    documentArr = WorkWithDB.findNameAndTextDocument(28)
    convertStringToFile(documentArr[0][1].replace('"', '\''), documentArr[0][0])
    convertFile(documentArr[0][0], ".rtf", ".docx")
    deleteFile(documentArr[0][0], ".rtf")
    from Windows.QtWindows.createFileStyleWindow import showCreateFileStyleWindow
    showCreateFileStyleWindow()
    closeMenuActionsWindow()


def showMenuActionsWindow():
    global menuActionsWindow
    menuActionsWindow = QtWidgets.QMainWindow()
    ui = Ui_menuActionsWindow()
    ui.setupUi(menuActionsWindow)
    menuActionsWindow.show()


def closeMenuActionsWindow():
    menuActionsWindow.close()


def editValueUser(value):
    global valueUser
    valueUser = value
