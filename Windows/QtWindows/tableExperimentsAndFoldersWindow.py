# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'tableExperimentsAndFoldersWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QWidget, QCheckBox, QHBoxLayout, QTableWidgetItem
from PyQt5.QtCore import Qt


class Ui_tableExperimentsAndFoldersWindow(object):
    def setupUi(self, tableExperimentsAndFoldersWindow):
        tableExperimentsAndFoldersWindow.setObjectName("tableExperimentsAndFoldersWindow")
        tableExperimentsAndFoldersWindow.setWindowModality(QtCore.Qt.NonModal)
        tableExperimentsAndFoldersWindow.resize(788, 600)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        tableExperimentsAndFoldersWindow.setFont(font)
        tableExperimentsAndFoldersWindow.setStyleSheet("background-color: rgb(212, 237, 255);")
        self.centralwidget = QtWidgets.QWidget(tableExperimentsAndFoldersWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.hiLabel = QtWidgets.QLabel(self.centralwidget)
        self.hiLabel.setGeometry(QtCore.QRect(0, 0, 800, 100))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(20)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.hiLabel.setFont(font)
        self.hiLabel.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.hiLabel.setAutoFillBackground(False)
        self.hiLabel.setStyleSheet("background-color: rgb(180, 197, 255);")
        self.hiLabel.setText("")
        self.hiLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.hiLabel.setWordWrap(True)
        self.hiLabel.setObjectName("hiLabel")
        self.continueButton = QtWidgets.QPushButton(self.centralwidget)
        self.continueButton.setGeometry(QtCore.QRect(300, 540, 200, 50))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.continueButton.setFont(font)
        self.continueButton.setStyleSheet("background-color: rgb(180, 197, 255);")
        self.continueButton.setDefault(False)
        self.continueButton.setFlat(False)
        self.continueButton.setObjectName("continueButton")
        self.infoLabel = QtWidgets.QLabel(self.centralwidget)
        self.infoLabel.setGeometry(QtCore.QRect(0, 110, 800, 60))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.infoLabel.setFont(font)
        self.infoLabel.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.infoLabel.setAutoFillBackground(False)
        self.infoLabel.setStyleSheet("")
        self.infoLabel.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.infoLabel.setWordWrap(False)
        self.infoLabel.setObjectName("infoLabel")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 170, 791, 361))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        self.tabWidget.setFont(font)
        self.tabWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(16)
        self.tab.setFont(font)
        self.tab.setObjectName("tab")
        self.tableExperimentWidget = QtWidgets.QTableWidget(self.tab)
        self.tableExperimentWidget.setGeometry(QtCore.QRect(0, 0, 781, 331))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.tableExperimentWidget.setFont(font)
        self.tableExperimentWidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableExperimentWidget.setObjectName("tableExperimentWidget")
        self.tableExperimentWidget.setColumnCount(0)
        self.tableExperimentWidget.setRowCount(0)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tableFolderWidget = QtWidgets.QTableWidget(self.tab_2)
        self.tableFolderWidget.setGeometry(QtCore.QRect(0, 0, 781, 331))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.tableFolderWidget.setFont(font)
        self.tableFolderWidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableFolderWidget.setObjectName("tableFolderWidget")
        self.tableFolderWidget.setColumnCount(0)
        self.tableFolderWidget.setRowCount(0)
        self.tabWidget.addTab(self.tab_2, "")
        tableExperimentsAndFoldersWindow.setCentralWidget(self.centralwidget)

        self.hiLabel.setText(nameUser)
        self.tableExperimentWidget.setRowCount(len(experiments))
        self.tableExperimentWidget.setColumnCount(4)
        self.tableExperimentWidget.setHorizontalHeaderLabels(('Добавить?', 'Название эксперимента', 'Дата начала',
                                                              'Дата окончания'))
        self.tableExperimentWidget.setColumnWidth(0, 100)
        self.tableExperimentWidget.setColumnWidth(1, 479)
        self.tableExperimentWidget.setColumnWidth(2, 300)
        self.tableExperimentWidget.setColumnWidth(3, 300)
        for i in range(len(experiments)):
            widget = QWidget()
            checkbox = QCheckBox()
            checkbox.setCheckState(Qt.Unchecked)
            layoutH = QHBoxLayout(widget)
            layoutH.addWidget(checkbox)
            layoutH.setAlignment(Qt.AlignCenter)
            layoutH.setContentsMargins(0, 0, 0, 0)
            self.tableExperimentWidget.setCellWidget(i, 0, widget)
            self.tableExperimentWidget.setItem(i, 1, QTableWidgetItem(experiments[i][1]))
            self.tableExperimentWidget.setItem(i, 2, QTableWidgetItem(str(experiments[i][2])))
            self.tableExperimentWidget.setItem(i, 3, QTableWidgetItem(str(experiments[i][3])))

        experimentNameArr = []
        countRow = 0
        for name in folders:
            if name[2] not in experimentNameArr:
                experimentNameArr.append(name[2])
            if name[3] is not None:
                countRow += 1
        countRow += len(experimentNameArr)

        self.tableFolderWidget.setRowCount(countRow)
        self.tableFolderWidget.setColumnCount(4)
        self.tableFolderWidget.setHorizontalHeaderLabels(('Добавить?', 'Название', 'Дата начала', 'Дата окончания'))
        self.tableFolderWidget.setColumnWidth(0, 100)
        self.tableFolderWidget.setColumnWidth(1, 479)
        self.tableFolderWidget.setColumnWidth(2, 300)
        self.tableFolderWidget.setColumnWidth(3, 300)
        numFolder = 0
        i = 0
        while numFolder < len(experimentNameArr):
            self.tableFolderWidget.setItem(i, 1, QTableWidgetItem(experimentNameArr[numFolder]))
            i += 1
            for j in range(len(folders)):
                if folders[j][2] == experimentNameArr[numFolder] and folders[j][3] is not None:
                    widget = QWidget()
                    checkbox = QCheckBox()
                    checkbox.setCheckState(Qt.Unchecked)
                    layoutH = QHBoxLayout(widget)
                    layoutH.addWidget(checkbox)
                    layoutH.setAlignment(Qt.AlignCenter)
                    layoutH.setContentsMargins(0, 0, 0, 0)
                    self.tableFolderWidget.setCellWidget(i, 0, widget)
                    self.tableFolderWidget.setItem(i, 1, QTableWidgetItem("\t" + str(folders[j][3])))
                    self.tableFolderWidget.setItem(i, 2, QTableWidgetItem(str(folders[j][4])))
                    self.tableFolderWidget.setItem(i, 3, QTableWidgetItem(str(folders[j][5])))
                    i += 1
            numFolder += 1

        def clickedContinueButton():
            checkedList = []
            if self.tabWidget.currentWidget() == self.tab:
                for i in range(self.tableExperimentWidget.rowCount()):
                    if self.tableExperimentWidget.cellWidget(i, 0).findChild(type(QCheckBox())).isChecked():
                        checkedList.append(experiments[i][0])
            if self.tabWidget.currentWidget() == self.tab_2:
                for i in range(self.tableFolderWidget.rowCount()):
                    if self.tableFolderWidget.cellWidget(i, 0) is not None:
                        if self.tableFolderWidget.cellWidget(i, 0).findChild(type(QCheckBox())).isChecked():
                            j = i
                            while self.tableFolderWidget.cellWidget(j, 0) is not None:
                                j -= 1
                            for k in range(len(folders)):
                                if folders[k][2] == self.tableFolderWidget.item(j, 1).text():
                                    if folders[k + i - j - 1][0] not in checkedList:
                                        checkedList.append(folders[k + i - j - 1][0])
                                    break
            testCheckedList(checkedList)

        self.continueButton.clicked.connect(clickedContinueButton)

        self.retranslateUi(tableExperimentsAndFoldersWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(tableExperimentsAndFoldersWindow)

    def retranslateUi(self, tableExperimentsAndFoldersWindow):
        _translate = QtCore.QCoreApplication.translate
        tableExperimentsAndFoldersWindow.setWindowTitle(_translate("tableExperimentsAndFoldersWindow", "Experiment"))
        self.continueButton.setText(_translate("tableExperimentsAndFoldersWindow", "Продолжить"))
        self.infoLabel.setText(_translate("tableExperimentsAndFoldersWindow", "Выберите эксперементы для отчета:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("tableExperimentsAndFoldersWindow", "Эксперименты"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("tableExperimentsAndFoldersWindow", "Папки"))


def showTableExperimentWindow():
    global tableExperimentsWindow
    tableExperimentsWindow = QtWidgets.QMainWindow()
    ui = Ui_tableExperimentsAndFoldersWindow()
    ui.setupUi(tableExperimentsWindow)
    tableExperimentsWindow.show()


def closeTableExperimentWindow():
    tableExperimentsWindow.close()


def editNameUser(text):
    global nameUser
    nameUser = text


def editExperiments(experimentsInfo, folderInfo):
    global experiments
    experiments = experimentsInfo
    global folders
    folders = folderInfo


def testCheckedList(checkedList):
    if len(checkedList) > 0:
        from InputTest import getExperimentsCheckedList, editIsUploadFile
        editIsUploadFile(False)
        getExperimentsCheckedList(checkedList)
        # from Windows.QtWindows.inputFileFormatting import showInputFileFormattingWindow
        # showInputFileFormattingWindow()
        from Windows.QtWindows.inputParamFileCreateWindow import showInputParamFileCreateWindow
        showInputParamFileCreateWindow()
        closeTableExperimentWindow()
    else:
        from Windows.QtWindows.errWindow import editText
        editText('Ошибка! Вы не выбрали ни одного эксперимента')

