# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'progressBarWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import random

from PyQt5 import QtCore, QtGui, QtWidgets

from math import floor

class ProgressHandler(QtCore.QThread):
    mySignal = QtCore.pyqtSignal(list)

    def run(self):
        # while progressBarValue != 100:
        #     self.mySignal.emit(["progress_increment", progressBarValue])
        for step in range(0, 101):
            self.mySignal.emit(["progress_increment", step])


class Ui_progressBarWindow(object):
    def setupUi(self, progressBarWindow):
        progressBarWindow.setObjectName("progressBarWindow")
        progressBarWindow.setWindowModality(QtCore.Qt.ApplicationModal)
        progressBarWindow.resize(500, 200)
        progressBarWindow.setStyleSheet("background-color: rgb(212, 237, 255);")
        self.label = QtWidgets.QLabel(progressBarWindow)
        self.label.setGeometry(QtCore.QRect(200, 15, 100, 30))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.progressBar = QtWidgets.QProgressBar(progressBarWindow)
        self.progressBar.setGeometry(QtCore.QRect(50, 80, 400, 30))
        self.progressBar.setProperty("value", 24)
        self.progressBar.setObjectName("progressBar")
        self.statusProgressLabel = QtWidgets.QLabel(progressBarWindow)
        self.statusProgressLabel.setGeometry(QtCore.QRect(50, 130, 400, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        self.statusProgressLabel.setFont(font)
        self.statusProgressLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.statusProgressLabel.setObjectName("statusProgressLabel")

        self.handler = ProgressHandler()
        self.handler.mySignal.connect(self.signalHandler)
        self.handler.start()

        self.progressBar.setValue(0)

        self.retranslateUi(progressBarWindow)
        QtCore.QMetaObject.connectSlotsByName(progressBarWindow)

    def signalHandler(self, value):
        data = ["Загрузка началась", "Загрузка идет", "Почти загрузил", "Еще немного"]
        if value[0] == "progress_increment":
            currentValue = self.progressBar.value()
            self.progressBar.setValue(currentValue + 1)

            if value[1] % 25 == 0:
                randomData = random.choice(data)
                self.statusProgressLabel.setText(randomData)

        # data = ["Загрузка началась", "Загрузка идет", "Почти загрузил", "Еще немного"]
        # if value[0] == "progress_increment":
        #     currentValue = self.progressBar.value()
        #     self.progressBar.setValue(currentValue + 1)
        #
        #     if value[1] % 25 == 0:
        #         randomData = random.choice(data)
        #         self.statusProgressLabel.setText(randomData)

    def retranslateUi(self, progressBarWindow):
        _translate = QtCore.QCoreApplication.translate
        progressBarWindow.setWindowTitle(_translate("progressBarWindow", "Загрузка"))
        self.label.setText(_translate("progressBarWindow", "Загрузка"))
        self.statusProgressLabel.setText(_translate("progressBarWindow", "TextLabel"))


def showProgressBarWindow():
    global progressBarWindow
    progressBarWindow = QtWidgets.QDialog()
    ui = Ui_progressBarWindow()
    ui.setupUi(progressBarWindow)
    progressBarWindow.show()


def closeProgressBarWindow():
    progressBarWindow.close()


def editProgressBar(_progressBarValue):
    global progressBarValue
    progressBarValue = _progressBarValue


def editNameDocAndCountDoc(_nameDoc, _countDoc):
    global nameDoc
    nameDoc = _nameDoc
    global countDoc
    countDoc = _countDoc
