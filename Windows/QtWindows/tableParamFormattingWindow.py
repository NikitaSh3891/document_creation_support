# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'tableParamFormattingWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QWidget, QCheckBox, QHBoxLayout, QTableWidgetItem
from PyQt5.QtCore import Qt


class Ui_tableParamFormattingWindow(object):
    def setupUi(self, tableParamFormattingWindow):
        tableParamFormattingWindow.setObjectName("tableParamFormattingWindow")
        tableParamFormattingWindow.setWindowModality(QtCore.Qt.NonModal)
        tableParamFormattingWindow.resize(800, 600)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        tableParamFormattingWindow.setFont(font)
        tableParamFormattingWindow.setStyleSheet("background-color: rgb(212, 237, 255);")
        self.centralwidget = QtWidgets.QWidget(tableParamFormattingWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.hiLabel = QtWidgets.QLabel(self.centralwidget)
        self.hiLabel.setGeometry(QtCore.QRect(0, 0, 800, 100))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(20)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.hiLabel.setFont(font)
        self.hiLabel.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.hiLabel.setAutoFillBackground(False)
        self.hiLabel.setStyleSheet("background-color: rgb(180, 197, 255);")
        self.hiLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.hiLabel.setWordWrap(True)
        self.hiLabel.setObjectName("hiLabel")
        self.continueButton = QtWidgets.QPushButton(self.centralwidget)
        self.continueButton.setGeometry(QtCore.QRect(300, 540, 200, 50))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.continueButton.setFont(font)
        self.continueButton.setStyleSheet("background-color: rgb(180, 197, 255);")
        self.continueButton.setDefault(False)
        self.continueButton.setFlat(False)
        self.continueButton.setObjectName("continueButton")
        self.tableParamWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableParamWidget.setGeometry(QtCore.QRect(0, 180, 800, 350))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.tableParamWidget.setFont(font)
        self.tableParamWidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableParamWidget.setObjectName("tableParamWidget")
        self.tableParamWidget.setColumnCount(0)
        self.tableParamWidget.setRowCount(0)
        self.infoLabel = QtWidgets.QLabel(self.centralwidget)
        self.infoLabel.setGeometry(QtCore.QRect(0, 110, 800, 60))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.infoLabel.setFont(font)
        self.infoLabel.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.infoLabel.setAutoFillBackground(False)
        self.infoLabel.setStyleSheet("")
        self.infoLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.infoLabel.setWordWrap(False)
        self.infoLabel.setObjectName("infoLabel")
        tableParamFormattingWindow.setCentralWidget(self.centralwidget)

        paramArr = ["Проверка шрифта",
                    "Проверка размера шрифта",
                    "Проверка межстрочного интервала",
                    "Проверка выравнивания текста",
                    "Проверка отступа первой строки",
                    "Проверка на полужирный, подчеркнутый и курсивный текст",
                    "Проверка отступа между одним абзацем и последующим",
                    "Проверка отступа между одним абзацем и предыдущим",
                    "Проверка разрыва абзаца",
                    "Проверка на заглавные буквы",
                    "Проверка на цвет текста",
                    "Проверка на отступы полей "]

        self.tableParamWidget.setRowCount(len(paramArr))
        self.tableParamWidget.setColumnCount(2)
        self.tableParamWidget.setHorizontalHeaderLabels(('Добавить?', 'Название проверок'))
        self.tableParamWidget.setColumnWidth(0, 100)
        self.tableParamWidget.setColumnWidth(1, 679)

        for i in range(len(paramArr)):
            widget = QWidget()
            checkbox = QCheckBox()
            checkbox.setCheckState(Qt.Unchecked)
            layoutH = QHBoxLayout(widget)
            layoutH.addWidget(checkbox)
            layoutH.setAlignment(Qt.AlignCenter)
            layoutH.setContentsMargins(0, 0, 0, 0)
            self.tableParamWidget.setCellWidget(i, 0, widget)
            self.tableParamWidget.setItem(i, 1, QTableWidgetItem(paramArr[i]))
            self.tableParamWidget.cellWidget(i, 0).findChild(type(QCheckBox())).setChecked(True)

        def clickedContinueButton():
            checkedList = []
            for i in range(self.tableParamWidget.rowCount()):
                if self.tableParamWidget.cellWidget(i, 0).findChild(type(QCheckBox())).isChecked():
                    checkedList.append(i + 1)
            testCheckedList(checkedList)

        self.continueButton.clicked.connect(clickedContinueButton)

        self.retranslateUi(tableParamFormattingWindow)
        QtCore.QMetaObject.connectSlotsByName(tableParamFormattingWindow)

    def retranslateUi(self, tableParamFormattingWindow):
        _translate = QtCore.QCoreApplication.translate
        tableParamFormattingWindow.setWindowTitle(_translate("tableParamFormattingWindow", "Experiment"))
        self.hiLabel.setText(_translate("tableParamFormattingWindow", "Форматирование документов"))
        self.continueButton.setText(_translate("tableParamFormattingWindow", "Продолжить"))
        self.infoLabel.setText(_translate("tableParamFormattingWindow", "Выберите параметры проверки:"))


def showTableParamFormattingWindow():
    global tableParamFormattingWindow
    tableParamFormattingWindow = QtWidgets.QMainWindow()
    ui = Ui_tableParamFormattingWindow()
    ui.setupUi(tableParamFormattingWindow)
    tableParamFormattingWindow.show()


def closeTableParamFormattingWindow():
    tableParamFormattingWindow.close()


def testCheckedList(checkedList):
    if len(checkedList) > 0:
        from InputTest import tryToFormattingFile
        closeTableParamFormattingWindow()
        tryToFormattingFile(checkedList)
    else:
        from Windows.QtWindows.errWindow import editText
        editText('Ошибка! Вы не выбрали ни одного параметра')
